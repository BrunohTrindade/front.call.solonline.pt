name: Build & Deploy Frontend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # Variáveis de build do Vite (podem ser substituídas por Repository Variables)
      VITE_PORT: 8081
      VITE_PUBLIC_URL: ${{ vars.VITE_PUBLIC_URL }}
      VITE_API_BASE: ${{ vars.VITE_API_BASE }}
      VITE_API_ORIGIN: ${{ vars.VITE_API_ORIGIN }}
      # Fallbacks (caso as vars não estejam definidas, use IP padrão)
      FALLBACK_PUBLIC_URL: http://89.117.58.152:8081
      FALLBACK_API_BASE: http://89.117.58.152:8081/api
      FALLBACK_API_ORIGIN: http://89.117.58.152:8081
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Resolve env fallbacks
        run: |
          echo "VITE_PUBLIC_URL=${VITE_PUBLIC_URL:-$FALLBACK_PUBLIC_URL}" >> $GITHUB_ENV
          echo "VITE_API_BASE=${VITE_API_BASE:-$FALLBACK_API_BASE}" >> $GITHUB_ENV
          echo "VITE_API_ORIGIN=${VITE_API_ORIGIN:-$FALLBACK_API_ORIGIN}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add remote host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure remote directory exists
        run: ssh -p "${{ secrets.SSH_PORT || '22' }}" "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p '${{ secrets.REMOTE_PATH || '/var/www/solonline-front/dist' }}'"

      - name: Rsync dist to server
        run: |
          rsync -avz --delete -e "ssh -p ${{ secrets.SSH_PORT || '22' }}" dist/ "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_PATH || '/var/www/solonline-front/dist' }}/"

      - name: Reload Apache (optional)
        if: ${{ secrets.ENABLE_APACHE_RELOAD == 'true' }}
        run: ssh -p "${{ secrets.SSH_PORT || '22' }}" "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "sudo systemctl reload apache2 || true"
